#!/usr/bin/env python
# bot.py  ‚Äî Telegram-–±–æ—Ç: –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏ —à–ª—ë—Ç –≤–∏–¥–µ–æ-—Ñ–∞–π–ª –∏–∑ –ø–∞–ø–∫–∏ videos/

# 1) –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env (–∏–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã)

import subprocess
import sys
from dotenv import load_dotenv
load_dotenv()

import os
from pathlib import Path
from telegram import (
    Update,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    InputFile,
)
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
)
subprocess.Popen([sys.executable, "parse.py"])
# 2) –ë–µ—Ä—ë–º —Ç–æ–∫–µ–Ω, –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–Ω –µ—Å—Ç—å
TOKEN = os.getenv("TG_TOKEN")
if not TOKEN:
    raise RuntimeError(
        "TG_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –∑–∞–¥–∞–π—Ç–µ –µ–≥–æ –≤ .env "
        "–∏–ª–∏ –∫–∞–∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è!"
    )

# 3) –ü–∞–ø–∫–∞ —Å –≤–∏–¥–µ–æ (–ø–æ–ª–æ–∂–∏—Ç–µ —Ñ–∞–π–ª—ã —Å—é–¥–∞, —Ä—è–¥–æ–º —Å –±–æ—Ç–æ–º)
VIDEO_DIR = Path("downloads")

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# –§–£–ù–ö–¶–ò–ò-–•–≠–ù–î–õ–ï–†–´

def make_keyboard() -> InlineKeyboardMarkup:
    """–°—Ç—Ä–æ–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–∑ –∏–º—ë–Ω —Ñ–∞–π–ª–æ–≤."""
    buttons = [
        [InlineKeyboardButton(text=path.stem, callback_data=path.name)]
        for path in VIDEO_DIR.iterdir() if path.is_file()
    ]
    # –ï—Å–ª–∏ —Ñ–∞–π–ª–æ–≤ –Ω–µ—Ç ‚Äî –æ–¥–Ω–∞ ¬´–∑–∞–≥–ª—É—à–∫–∞¬ª
    if not buttons:
        buttons = [[InlineKeyboardButton("–ù–µ—Ç –≤–∏–¥–µ–æ", callback_data="NONE")]]
    return InlineKeyboardMarkup(buttons)


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """/start ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é."""
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∏–¥–µ–æ:",
        reply_markup=make_keyboard(),
    )


async def send_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ."""
    query = update.callback_query
    await query.answer()

    # ¬´NONE¬ª ‚Äî –∫–ª–∏–∫ –ø–æ –∑–∞–≥–ª—É—à–∫–µ, –ø—Ä–æ—Å—Ç–æ –º–æ–ª—á–∏–º
    if query.data == "NONE":
        return

    file_path = VIDEO_DIR / query.data
    if not file_path.exists():
        await query.message.reply_text("–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω üòî")
        return

    # < 4 –ì–ë ‚Äî –º–æ–∂–Ω–æ –∫–∞–∫ video, –∏–Ω–∞—á–µ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –∫–∞–∫ document
    with file_path.open("rb") as f:
        await query.message.reply_video(
            video=InputFile(f, filename=file_path.name),
            caption=f"üìπ {file_path.stem}",
        )


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
# –¢–û–ß–ö–ê –í–•–û–î–ê

def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(send_video))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚Äî Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
    app.run_polling()


if __name__ == "__main__":
    main()
